
  @IBAction func caseButton(_ sender: Any) {
      if timerIsRunning == false {
          seconds = 240
          runTimer()
      }
      else {
          //reset timer set time then run
          resetTimer()
          seconds = 240
          runTimer()
      }
  }

  @IBAction func rebutalButton(_ sender: Any) {
      if timerIsRunning == false {
          seconds = 240
          runTimer()
      }
      else {
          //reset timer set time then run
          resetTimer()
          seconds = 240
          runTimer()
      }
  }

  @IBAction func crossfireButton(_ sender: Any) {
      if timerIsRunning == false {
          seconds = 180
          runTimer()
      }
      else {
          //reset timer set time then run
          resetTimer()
          seconds = 180
          runTimer()
      }
  }

  @IBAction func summaryButton(_ sender: Any) {
      if timerIsRunning == false {
          seconds = 120
          runTimer()
      }
      else {
          //reset timer set time then run
          resetTimer()
          seconds = 120
          runTimer()
      }
  }

  @IBAction func finalfocusButton(_ sender: Any) {
      if timerIsRunning == false {
          seconds = 120
          runTimer()
      }
      else {
          //reset timer set time then run
          resetTimer()
          seconds = 120
          runTimer()
      }
  }

  @IBAction func pauseButton(_ sender: Any) {
      if self.resumeTapped == false {
          timer.invalidate()
          self.resumeTapped = true
          self.pauseButtonOutlet.setTitle("Resume", for: .normal)
      }
      else {
          runTimer()
          self.resumeTapped = false
          self.pauseButtonOutlet.setTitle("Pause", for: .normal)
      }
  }

  @IBOutlet weak var pauseButtonOutlet: UIButton!

  @IBAction func resetButton(_ sender: Any) {
      resetTimer()
  }
  func runTimer() {
      timer = Timer.scheduledTimer(timeInterval: 1, target: self, selector: (#selector(ViewController.updateTimer)), userInfo: nil, repeats: true)

      timerIsRunning = true
  }
  @objc func updateTimer() {
      if seconds < 1 {
          timer.invalidate()
          //send alert to inicate timer is up
      }
      else {
          seconds -= 1 //This will count down seconds.
          timeDisplay.text = timeString(time: TimeInterval(seconds)) //This will update the label.
      }
  }
  func resetTimer() {
      timer.invalidate()
      //Reset all variables.

      timerIsRunning = false
      resumeTapped = false
      resetDisplay = "00:00:00"
      timeDisplay.text = resetDisplay
  }
  func timeString(time:TimeInterval) -> String {
      let hours = Int(time) / 3600
      let minutes = Int(time) / 60 % 60
      let seconds = Int(time) % 60

      return String(format:"%02i:%02i:%02i", hours, minutes, seconds)
  }

  //This will set the Navagation Bar to the new type in iOS 11.
  func setupNavBar() {
      if #available(iOS 11.0, *) {
          navigationController?.navigationBar.prefersLargeTitles = true
      } else {
          // Fallback on earlier versions
      }
  }
  
